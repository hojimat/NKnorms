pass nature, firm, agent by reference if possible


    def phi(self, myid, x, eps=0.0):
        '''inputs bitstring, outputs performance'''
        n = self.n
        imat = self.interaction_matrix
        cmat = self.landscape
        globalmax = self.globalmax

        if len(x) != self.n * self.p:
            raise nk.InvalidBitstringError("Please enter the full bitstring.")
        tmp = np.array(nk.contrib_solve(x,imat,cmat,n,self.p)) / globalmax

        tmp = tmp + np.random.normal(0,eps) # imperfect information
        output = tmp # if no index is given, return all perfs
        if myid is not None: # given index, return own perf and mean of others
            tmp1 = tmp[myid]
            tmp2 = np.delete(tmp,myid).mean() # mean of others perfs
            output = (tmp1,tmp2)
        return output
